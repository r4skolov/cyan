{"version":3,"file":"app.min.js","mappings":"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","sources":["webpack:///./node_modules/body-scroll-lock/lib/bodyScrollLock.esm.js","webpack:///./source/js/components/MainMenu.js","webpack:///./source/js/components/accordion.js","webpack:///./source/js/components/select.js","webpack:///./source/js/components/header.js","webpack:///./source/js/index.js"],"sourcesContent":["function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n// Older browsers don't support event options, feature detect it.\n\n// Adopted and modified solution from Bohdan Didukh (2017)\n// https://stackoverflow.com/questions/41594997/ios-10-safari-prevent-scrolling-behind-a-fixed-overlay-and-maintain-scroll-posi\n\nvar hasPassiveEvents = false;\nif (typeof window !== 'undefined') {\n  var passiveTestOptions = {\n    get passive() {\n      hasPassiveEvents = true;\n      return undefined;\n    }\n  };\n  window.addEventListener('testPassive', null, passiveTestOptions);\n  window.removeEventListener('testPassive', null, passiveTestOptions);\n}\n\nvar isIosDevice = typeof window !== 'undefined' && window.navigator && window.navigator.platform && (/iP(ad|hone|od)/.test(window.navigator.platform) || window.navigator.platform === 'MacIntel' && window.navigator.maxTouchPoints > 1);\n\n\nvar locks = [];\nvar documentListenerAdded = false;\nvar initialClientY = -1;\nvar previousBodyOverflowSetting = void 0;\nvar previousBodyPosition = void 0;\nvar previousBodyPaddingRight = void 0;\n\n// returns true if `el` should be allowed to receive touchmove events.\nvar allowTouchMove = function allowTouchMove(el) {\n  return locks.some(function (lock) {\n    if (lock.options.allowTouchMove && lock.options.allowTouchMove(el)) {\n      return true;\n    }\n\n    return false;\n  });\n};\n\nvar preventDefault = function preventDefault(rawEvent) {\n  var e = rawEvent || window.event;\n\n  // For the case whereby consumers adds a touchmove event listener to document.\n  // Recall that we do document.addEventListener('touchmove', preventDefault, { passive: false })\n  // in disableBodyScroll - so if we provide this opportunity to allowTouchMove, then\n  // the touchmove event on document will break.\n  if (allowTouchMove(e.target)) {\n    return true;\n  }\n\n  // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).\n  if (e.touches.length > 1) return true;\n\n  if (e.preventDefault) e.preventDefault();\n\n  return false;\n};\n\nvar setOverflowHidden = function setOverflowHidden(options) {\n  // If previousBodyPaddingRight is already set, don't set it again.\n  if (previousBodyPaddingRight === undefined) {\n    var _reserveScrollBarGap = !!options && options.reserveScrollBarGap === true;\n    var scrollBarGap = window.innerWidth - document.documentElement.clientWidth;\n\n    if (_reserveScrollBarGap && scrollBarGap > 0) {\n      var computedBodyPaddingRight = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right'), 10);\n      previousBodyPaddingRight = document.body.style.paddingRight;\n      document.body.style.paddingRight = computedBodyPaddingRight + scrollBarGap + 'px';\n    }\n  }\n\n  // If previousBodyOverflowSetting is already set, don't set it again.\n  if (previousBodyOverflowSetting === undefined) {\n    previousBodyOverflowSetting = document.body.style.overflow;\n    document.body.style.overflow = 'hidden';\n  }\n};\n\nvar restoreOverflowSetting = function restoreOverflowSetting() {\n  if (previousBodyPaddingRight !== undefined) {\n    document.body.style.paddingRight = previousBodyPaddingRight;\n\n    // Restore previousBodyPaddingRight to undefined so setOverflowHidden knows it\n    // can be set again.\n    previousBodyPaddingRight = undefined;\n  }\n\n  if (previousBodyOverflowSetting !== undefined) {\n    document.body.style.overflow = previousBodyOverflowSetting;\n\n    // Restore previousBodyOverflowSetting to undefined\n    // so setOverflowHidden knows it can be set again.\n    previousBodyOverflowSetting = undefined;\n  }\n};\n\nvar setPositionFixed = function setPositionFixed() {\n  return window.requestAnimationFrame(function () {\n    // If previousBodyPosition is already set, don't set it again.\n    if (previousBodyPosition === undefined) {\n      previousBodyPosition = {\n        position: document.body.style.position,\n        top: document.body.style.top,\n        left: document.body.style.left\n      };\n\n      // Update the dom inside an animation frame \n      var _window = window,\n          scrollY = _window.scrollY,\n          scrollX = _window.scrollX,\n          innerHeight = _window.innerHeight;\n\n      document.body.style.position = 'fixed';\n      document.body.style.top = -scrollY;\n      document.body.style.left = -scrollX;\n\n      setTimeout(function () {\n        return window.requestAnimationFrame(function () {\n          // Attempt to check if the bottom bar appeared due to the position change\n          var bottomBarHeight = innerHeight - window.innerHeight;\n          if (bottomBarHeight && scrollY >= innerHeight) {\n            // Move the content further up so that the bottom bar doesn't hide it\n            document.body.style.top = -(scrollY + bottomBarHeight);\n          }\n        });\n      }, 300);\n    }\n  });\n};\n\nvar restorePositionSetting = function restorePositionSetting() {\n  if (previousBodyPosition !== undefined) {\n    // Convert the position from \"px\" to Int\n    var y = -parseInt(document.body.style.top, 10);\n    var x = -parseInt(document.body.style.left, 10);\n\n    // Restore styles\n    document.body.style.position = previousBodyPosition.position;\n    document.body.style.top = previousBodyPosition.top;\n    document.body.style.left = previousBodyPosition.left;\n\n    // Restore scroll\n    window.scrollTo(x, y);\n\n    previousBodyPosition = undefined;\n  }\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions\nvar isTargetElementTotallyScrolled = function isTargetElementTotallyScrolled(targetElement) {\n  return targetElement ? targetElement.scrollHeight - targetElement.scrollTop <= targetElement.clientHeight : false;\n};\n\nvar handleScroll = function handleScroll(event, targetElement) {\n  var clientY = event.targetTouches[0].clientY - initialClientY;\n\n  if (allowTouchMove(event.target)) {\n    return false;\n  }\n\n  if (targetElement && targetElement.scrollTop === 0 && clientY > 0) {\n    // element is at the top of its scroll.\n    return preventDefault(event);\n  }\n\n  if (isTargetElementTotallyScrolled(targetElement) && clientY < 0) {\n    // element is at the bottom of its scroll.\n    return preventDefault(event);\n  }\n\n  event.stopPropagation();\n  return true;\n};\n\nexport var disableBodyScroll = function disableBodyScroll(targetElement, options) {\n  // targetElement must be provided\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error('disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.');\n    return;\n  }\n\n  // disableBodyScroll must not have been called on this targetElement before\n  if (locks.some(function (lock) {\n    return lock.targetElement === targetElement;\n  })) {\n    return;\n  }\n\n  var lock = {\n    targetElement: targetElement,\n    options: options || {}\n  };\n\n  locks = [].concat(_toConsumableArray(locks), [lock]);\n\n  if (isIosDevice) {\n    setPositionFixed();\n  } else {\n    setOverflowHidden(options);\n  }\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = function (event) {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        initialClientY = event.targetTouches[0].clientY;\n      }\n    };\n    targetElement.ontouchmove = function (event) {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        handleScroll(event, targetElement);\n      }\n    };\n\n    if (!documentListenerAdded) {\n      document.addEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n      documentListenerAdded = true;\n    }\n  }\n};\n\nexport var clearAllBodyScrollLocks = function clearAllBodyScrollLocks() {\n  if (isIosDevice) {\n    // Clear all locks ontouchstart/ontouchmove handlers, and the references.\n    locks.forEach(function (lock) {\n      lock.targetElement.ontouchstart = null;\n      lock.targetElement.ontouchmove = null;\n    });\n\n    if (documentListenerAdded) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n      documentListenerAdded = false;\n    }\n\n    // Reset initial clientY.\n    initialClientY = -1;\n  }\n\n  if (isIosDevice) {\n    restorePositionSetting();\n  } else {\n    restoreOverflowSetting();\n  }\n\n  locks = [];\n};\n\nexport var enableBodyScroll = function enableBodyScroll(targetElement) {\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error('enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.');\n    return;\n  }\n\n  locks = locks.filter(function (lock) {\n    return lock.targetElement !== targetElement;\n  });\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = null;\n    targetElement.ontouchmove = null;\n\n    if (documentListenerAdded && locks.length === 0) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n      documentListenerAdded = false;\n    }\n  }\n\n  if (isIosDevice) {\n    restorePositionSetting();\n  } else {\n    restoreOverflowSetting();\n  }\n};\n\n","import { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\r\n\r\nconst burger = () => {\r\n\tconst burgerEl      = document?.querySelector('[data-burger]');\r\n\tconst menu          = document?.querySelector('[data-menu]');\r\n\tconst targetElement = document.querySelector('body');\r\n\tconst header        = document.querySelector('.header');\r\n\r\n\tfunction disableScroll() {\r\n\t\tconst pagePosition = window.scrollY;\r\n\t\tdocument.body.classList.add('scroll');\r\n\t\tdocument.body.dataset.position = pagePosition;\r\n\t}\r\n\r\n\tfunction enableScroll() {\r\n\t\tdocument.body.classList.remove('scroll');\r\n\t\tdocument.body.removeAttribute('data-position');\r\n\t}\r\n\r\n\tburgerEl?.addEventListener('click', () => {\r\n\t\tburgerEl?.classList.toggle('burger--active');\r\n\t\tmenu?.classList.toggle('active');\r\n\t\theader?.classList.toggle('header--active');\r\n\r\n\t\tif (menu?.classList.contains('active')) {\r\n\t\t\tburgerEl?.setAttribute('aria-expanded', 'true');\r\n\t\t\tburgerEl?.setAttribute('aria-label', 'Сlose menu');\r\n\t\t\tdisableScroll();\r\n\t\t} else {\r\n\t\t\tburgerEl?.setAttribute('aria-expanded', 'false');\r\n\t\t\tburgerEl?.setAttribute('aria-label', 'Open menu');\r\n\t\t\tenableScroll();\r\n\t\t}\r\n\t});\r\n\r\n\tconst appHeight = () => {\r\n\t\tconst doc = document.documentElement;\r\n\t\tdoc.style.setProperty('--app-height', `${window.innerHeight}px`);\r\n\t};\r\n\twindow.addEventListener('resize', appHeight);\r\n\tappHeight();\r\n};\r\n\r\nexport default burger;\r\n","const accordion = () => {\r\n\tconst accordions    = document.querySelectorAll('.accordion');\r\n\tlet activeAccordion = null;\r\n\r\n\taccordions.forEach((el) => {\r\n\t\tel.addEventListener('click', (e) => {\r\n\t\t\tconst self    = e.currentTarget;\r\n\t\t\tconst control = self.querySelector('.accordion__control'); //\r\n\t\t\tconst content = self.querySelector('.accordion__content'); // то что будем открывать\r\n\r\n\t\t\tif (self === activeAccordion) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (activeAccordion) {\r\n\t\t\t\tconst activeControl = activeAccordion.querySelector('.accordion__control');\r\n\t\t\t\tconst activeContent = activeAccordion.querySelector('.accordion__content');\r\n\t\t\t\tactiveAccordion.classList.remove('open');\r\n\t\t\t\tactiveControl.setAttribute('aria-expanded', false);\r\n\t\t\t\tactiveContent.setAttribute('aria-hidden', true);\r\n\t\t\t\tactiveContent.style.maxHeight = null;\r\n\t\t\t}\r\n\r\n\t\t\tself.classList.add('open');\r\n\t\t\tcontrol.setAttribute('aria-expanded', true);\r\n\t\t\tcontent.setAttribute('aria-hidden', false);\r\n\t\t\tcontent.style.maxHeight = `${content.scrollHeight}px`;\r\n\r\n\t\t\tactiveAccordion = self;\r\n\t\t});\r\n\t});\r\n};\r\n\r\nexport default accordion;\r\n","const SELECT_SELECTOR = '.js-select';\r\nconst BTN_SELECTOR    = '.js-select-btn';\r\nconst LIST_SELECTOR   = '.js-select-list';\r\nconst OPTION_SELECTOR = '.js-select-option';\r\n\r\nconst CLASS_ACTIVE = 'active';\r\n\r\nconst SELECTS = document?.querySelectorAll('.js-select');\r\n\r\nconst initSelects = () => {\r\n\tif (!SELECTS.length) return;\r\n\r\n\tfunction closeAllSelect() {\r\n\t\tconst btnList    = document?.querySelectorAll(BTN_SELECTOR);\r\n\t\tconst selectList = document?.querySelectorAll(LIST_SELECTOR);\r\n\r\n\t\tbtnList.forEach((el) => el.classList.remove(CLASS_ACTIVE));\r\n\t\tselectList.forEach((el) => el.classList.remove(CLASS_ACTIVE));\r\n\t}\r\n\r\n\tSELECTS.forEach((select) => {\r\n\t\tconst btn        = select.querySelector(BTN_SELECTOR);\r\n\t\tconst selectList = select.querySelector(LIST_SELECTOR);\r\n\t\tconst optionList = selectList.querySelectorAll(OPTION_SELECTOR);\r\n\r\n\t\tbtn.addEventListener('click', (e) => {\r\n\t\t\tconst target = e.target.closest(BTN_SELECTOR);\r\n\r\n\t\t\tif (target.classList.contains(CLASS_ACTIVE)) {\r\n\t\t\t\ttarget.classList.remove(CLASS_ACTIVE);\r\n\t\t\t\tselectList.classList.remove(CLASS_ACTIVE);\r\n\t\t\t} else {\r\n\t\t\t\tcloseAllSelect();\r\n\t\t\t\ttarget.classList.add(CLASS_ACTIVE);\r\n\t\t\t\tselectList.classList.add(CLASS_ACTIVE);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tselectList.addEventListener('click', (e) => {\r\n\t\t\tconst target = e.target.closest(OPTION_SELECTOR);\r\n\r\n\t\t\tif (target) {\r\n\t\t\t\tconst value   = target.getAttribute('data-value');\r\n\t\t\t\tconst content = target.innerHTML;\r\n\r\n\t\t\t\toptionList.forEach((option) => option.classList.remove(CLASS_ACTIVE));\r\n\r\n\t\t\t\ttarget.classList.add(CLASS_ACTIVE);\r\n\t\t\t\tbtn.classList.remove(CLASS_ACTIVE);\r\n\t\t\t\tbtn.innerHTML = content;\r\n\t\t\t\tbtn.setAttribute('data-value', value);\r\n\t\t\t\tselectList.classList.remove(CLASS_ACTIVE);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\tdocument.addEventListener('click', (e) => {\r\n\t\tconst { target } = e;\r\n\r\n\t\tif (target && !target.closest(SELECT_SELECTOR)) {\r\n\t\t\tcloseAllSelect();\r\n\t\t}\r\n\t});\r\n};\r\n\r\nexport default initSelects;\r\n","const header = () => {\r\n\tconst header = document.querySelector('.header');\r\n\tconst hero   = document.getElementById('hero');\r\n\r\n\tif (hero) {\r\n\t\tconst heroHeight = hero.clientHeight;\r\n\t\tdocument.addEventListener('scroll', () => {\r\n\t\t\tif (window.scrollY > heroHeight) {\r\n\t\t\t\theader.classList.add('active');\r\n\t\t\t} else {\r\n\t\t\t\theader.classList.remove('active');\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n};\r\nexport default header;\r\n","import DropPanel   from './components/DropPanel';\r\nimport MainMenu    from './components/MainMenu';\r\nimport accordion   from './components/accordion';\r\nimport initSelects from './components/select';\r\nimport header      from './components/header';\r\nimport burger      from './components/MainMenu';\r\n\r\n// Init\r\nfunction init() {\r\n\taccordion();\r\n\tinitSelects();\r\n\theader();\r\n\tburger();\r\n}\r\n\r\n(function () {\r\n\tinit();\r\n}());\r\n"],"names":["window","passiveTestOptions","passive","addEventListener","removeEventListener","navigator","platform","test","maxTouchPoints","burger","burgerEl","document","querySelector","menu","header","classList","toggle","contains","setAttribute","pagePosition","scrollY","body","add","dataset","position","disableScroll","remove","removeAttribute","appHeight","documentElement","style","setProperty","innerHeight","accordion","accordions","querySelectorAll","activeAccordion","forEach","el","e","self","currentTarget","control","content","activeControl","activeContent","maxHeight","scrollHeight","BTN_SELECTOR","LIST_SELECTOR","OPTION_SELECTOR","CLASS_ACTIVE","SELECTS","initSelects","closeAllSelect","btnList","selectList","length","select","btn","optionList","target","closest","value","getAttribute","innerHTML","option","hero","getElementById","heroHeight","clientHeight"],"sourceRoot":""}